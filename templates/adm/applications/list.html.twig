{% extends 'dashboard.html.twig' %}

{% block title %}Hello AdmDashboardController!{% endblock %}

{% block body %}


    <!-- Begin Page Content -->
    <div class="container-fluid">


        <!-- DataTales Example -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Aplicações</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-sm table-striped table-hover table-bordered" id="dataTable" width="100%"
                           cellspacing="0">
                        <thead class="thead-dark">
                        <tr>
                            <th>Cliente</th>
                            <th>Ativos</th>
                            <th>Investimento</th>
                            <th>Ganho/Perda</th>
                            <th>Ganho / Perda %</th>
                            <th>Ação</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for list in lists %}
                            <tr>
                                <td>{{ list.cliente }}</td>
                                <td>{{ list.data_aport }}</td>
                                <td>{{ list.value }}</td>
                                <td>{{ list.budget|raw }}</td>
                                <td class="text-center">{{ list.percentual }}</td>
                                <td class="text-center">
                                    <a href="#" class="btn btn-sm btn-outline-primary"><i
                                                class="fa fa-chart-bar"></i></a>
                                    <a href="#" class="btn btn-sm btn-outline-secondary"><i class="fa fa-download"></i></a>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
    <!-- /.container-fluid -->

{% endblock %}

{% block stylesheets %}
    <link href="{{ asset('adm/vendor/datatables/dataTables.bootstrap4.min.css') }}" rel="stylesheet">
{% endblock %}
{% block javascripts %}
    <!-- Page level custom scripts -->

    <script src="{{ asset('adm/vendor/datatables/jquery.dataTables.min.js') }}"></script>
    <script src="{{ asset('adm/vendor/datatables/dataTables.bootstrap4.min.js') }}"></script>
    <script>
        $(document).ready(function () {
            function number_format(numero, decimal, decimal_separador, milhar_separador) {
                numero = (numero + '').replace(/[^0-9+\-Ee.]/g, '');
                var n = !isFinite(+numero) ? 0 : +numero,
                    prec = !isFinite(+decimal) ? 0 : Math.abs(decimal),
                    sep = (typeof milhar_separador === 'undefined') ? ',' : milhar_separador,
                    dec = (typeof decimal_separador === 'undefined') ? '.' : decimal_separador,
                    s = '',
                    toFixedFix = function (n, prec) {
                        var k = Math.pow(10, prec);
                        return '' + Math.round(n * k) / k;
                    };
                s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
                if (s[0].length > 3) {
                    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
                }
                if ((s[1] || '').length < prec) {
                    s[1] = s[1] || '';
                    s[1] += new Array(prec - s[1].length + 1).join('0');
                }
                return s.join(dec);
            }

            function decFormatMoeda(value) {
                return number_format(value, 2, ',', '.');
            }

            function decFormat(value) {
                return number_format(value, 2, '', '.');
            }

            const moeda = function (v) {

                if ($.isNumeric(v)) {
                    if (v === '-0') { // se v = zero negativo retorna zero positivo
                        return 0;
                    } else {
                        v = v.replace(/\d(?=(?:\d{3})+(?:\D|$))/g, "$&.");
                        return decFormatMoeda(v);
                    }
                } else {
                    return '-';
                }
            };
            let configsDatatables = {
                'language': {

                    "sEmptyTable": "Nenhum registro encontrado",
                    "sInfo": "&raquo; Mostrando _START_ à _END_ - <b>Total de registros: _TOTAL_</b>",
                    "sInfoEmpty": "&raquo; Não há nenhum registro",
                    "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "_MENU_ Resultados por página",
                    "sProcessing": "<button class='btn btn-secondary' type='button' disabled><span class='spinner-border spinner-border-sm' role='status' aria-hidden='true'></span> Processando... </button>",
                    "sLoadingRecords": "<button class='btn btn-secondary mt-5' type='button' disabled><span class='spinner-border spinner-border-sm' role='status' aria-hidden='true'></span> Carregando... </button>",
                    "sZeroRecords": "Nenhum registro encontrado",
                    "sSearch": "<i class ='fas fa-search fa-1x' title='Pesquisar'></i>",
                    "oPaginate": {
                        "sNext": "Próximo",
                        "sPrevious": "Anterior",
                        "sFirst": "Primeiro",
                        "sLast": "Último"
                    },
                    "oAria": {
                        "sSortAscending": ": Ordenar colunas de forma ascendente",
                        "sSortDescending": ": Ordenar colunas de forma descendente"
                    }

                },
                'columnDefs': [
                    {
                        'targets': [2, 3, 4],
                        'createdCell': function (nTd, sData, oData, iRow, iCol) {
                            let v;
                            if (iCol === 2 || iCol === 3) {
                                if (sData !== '-') {
                                    v = moeda(sData);
                                } else {
                                    v = sData;
                                }

                                $(nTd).text(`€ ${v}`);

                                if (sData < 0) {
                                    $(nTd).css('color', 'red')
                                }
                            }
                            if (iCol === 4) {
                                $(nTd).text(sData + '%');

                                if (sData < 0) {
                                    $(nTd).css('color', 'red')
                                }
                            }
                        }
                    }
                ]
            };
            $('#dataTable').DataTable(configsDatatables);
        });
    </script>
{% endblock %}